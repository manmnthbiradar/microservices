# ----------------------------------------
# Logging
# ----------------------------------------
debug=false
trace=false
# ----------------------------------------
# Spring App
# ----------------------------------------
spring.application.name=accounts-service
# ----------------------------------------
# Spring AOP
# ----------------------------------------
spring.aop.auto=true
spring.aop.proxy-target-class=true
# ----------------------------------------
# Templates
# ----------------------------------------
spring.freemarker.enabled=false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/accounts-server/templates/
server.error.path=/error
# ----------------------------------------
# JPA
# ----------------------------------------
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Jerusalem
spring.data.jpa.repositories.enabled=true
# ----------------------------------------
# DATA REST (RepositoryRestProperties)
# ----------------------------------------
#spring.data.rest.base-path=api
spring.data.rest.return-body-on-update=true
spring.data.rest.return-body-on-create=true
# ----------------------------------------
# WEB
# ----------------------------------------
server.port=7070
# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
spring.security.filter.order=2
spring.security.user.name=client
spring.security.user.password=password
spring.security.user.roles=CLIENT
# ----------------------------------------
# Map of availability zone to list of fully qualified URLs to communicate with eureka server.
# Each value can be a single URL or a comma separated list of alternative locations.
# Typically the eureka server URLs carry protocol,host,port,context and version information
# if any.
#
# Example: http://ec2-256-156-243-129.compute-1.amazonaws.com:7001/eureka/
#
# The EUREKA_URL is a place holder for an environment variable containing
# the complete eureka url value. Used with docker, cloud, etc...
# ----------------------------------------
eureka.client.service-url.defaultZone=${EUREKA_URL:http://client:password@localhost:8761/eureka}
# ----------------------------------------
# indicates the time in seconds that the eureka server waits since it
# received the last heartbeat before it can remove this instance from
# its view and there by disallowing traffic to this instance.

# Setting this value too long could mean that the traffic could be routed
# to the instance even though the instance is not alive.
#
# Setting this value too small could mean, the instance may be taken out
# of traffic because of temporary network glitches. This value to be set
# to at least higher than the value specified in leaseRenewalIntervalInSeconds.
#
# Here we use the default of 90 seconds
# ----------------------------------------
eureka.instance.lease-expiration-duration-in-seconds=90
# ----------------------------------------
# indicates how often (in seconds) the eureka client needs to
# send heartbeats to eureka server to indicate that it is still alive.
# If the heartbeats are not received for the period specified in
# leaseExpirationDurationInSeconds, eureka server will remove the instance
# from its view, there by disallowing traffic to this instance.
#
# Here it is set low to speed up the registration process
# while in development. The default is 30 seconds.
# ----------------------------------------
eureka.instance.lease-renewal-interval-in-seconds=5
# ----------------------------------------
# flag to say that, when guessing a hostname,
# the IP address of the server should be used
# in prference to the hostname reported by the OS
#
# default is 'false'.
# ----------------------------------------
#eureka.instance.prefer-ip-address=true
# ----------------------------------------
# Endpoint IDs that should be included
# ----------------------------------------
management.endpoints.jmx.exposure.exclude=*
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=caches,conditions,heapdump,loggers,logfile,scheduledtasks,threaddump
